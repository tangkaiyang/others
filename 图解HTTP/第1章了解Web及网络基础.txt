第1章 了解Web以及网络基础
WWW(World Wide Web)
把SGML(Standard Ceneralized Markup Language,标准通用标记语言)作为页面的文本标记语言的
HTML(HyperText Markup Language,超文本标记语言);
作为文档传递协议的HTTP;
指定文档所在地址的URL(Uniform Resource Locator,统一资源定位符)

通常使用的网络(包括互联网)是在TCP/IP协议族的基础上运作的.而HTTP属于它内部的一个自己
协议protocol

TCP/IP分层
应用层:决定了向用户提供应用服务时通信的活动.
TCP/IP协议族内预存了各类通用的应用服务,比如,FTP(File Transfer Protocol,文件传输协议)
和DNS(Domain Name System,域名系统)服务就是其中两类.HTTP协议也处于该层.
传输层:对上层应用层,提供处于网络连接中的两台计算机之间的数据传输.
TCP(Transmission Control Protocol,传输控制协议)
UDP(User Data Protocol,用户数据报协议)
网络层:又名网络互连层,用来处理在网络上流动的数据包.
数据包是网络传输的最小数据单位.该层规定了通过怎样的路径(所谓的传输路线)到达对方计算机,并把数据包传送给对方.
与对方计算机之间通过多台计算机或网络设备进行传输时,网络层所起的作用就是在众多的选项内选择一条传输路线
数据链路层:链路层,网络接口层,用来处理连接网络的硬件部分.
包括控制操作系统,硬件的设备驱动,NIC(Netword Interface Card,网络适配器,即网卡),及光纤等物理可见部分
(还包括连接器等一切传输媒介).硬件上的范畴均在链路层的作用范围之内

封装(encapsulate)

负责传输的IP协议(Internet Protocol)网际协议
IP地址和MAC地址(Media Acess Control Address)
使用ARP协议(Address Resolution Protocol)凭借MAC地址进行通信
IP间的通信依赖MAC地址.在网络上,通信的双方在同一局域网(LAN)内的情况是很少的,通常是经过多台计算机和
网络设备中转才能连接到对方.而在进行中转时,会利用下一站中转设备的MAC地址来搜索下一个中转目标.
这时,会采用ARP协议.
ARP是一种用以解析地址的协议,根据通信方的IP地址就可以反查出对应的MAC地址.
没有人能够全面掌握互联网中的传输状况
路由选择(routing),

TCP位于传输层,提供可靠的字节流服务
字节流服务(Byte Stream Service),为了方便传输,将大块数据分割成以报文段(segment)为单位的数据包进行管理.
TCP协议为了更容易传送大数据才把数据分割,而且TCP协议能够确认数据最终是否送达到对方.

确保数据能到达目标:
TCP协议三次握手(three-way handshaking)策略.
用TCP协议把数据包送出去后,TCP不会对传送后的情况置之不理,它一定会向对方确认是否成功到达.
握手过程中使用了TCP的标志(flag)--SYN(synchronize)和ACK(acknowledgement)
发送端首先发送一个带SYN标志的数据包给对方.接收端收到后,回传一个带有SYN/ACK标志的数据包以示传达确认信息.
最后发送端再回传一个带ACK标志的数据包,代表"握手"结束
若在握手过程中某个阶段莫名中断,TCP协议会再次以相同的顺序发送相同的数据包

负责域名解析的DNS服务
DNS(Domain Name System)服务是和HTTP协议一样位于应用层的协议.它提供域名到IP地址之间的解析服务
计算机可以被赋予IP地址,也可以被赋予主机名和域名,比如www.hackr.jp
DNS协议提供通过域名查找IP地址,或逆向从IP地址反查域名的服务

URI和URL
URI(统一资源标识符)Uniform Resource Identifier
URL(Uniform Resource Locator,统一资源定位符)
URI用字符串标识某一互联网资源,
而URL表示资源的地点(互联网上所处的位置)URL是URI的子集

URI格式
涵盖全部信息的绝对URI,绝对URL以及相对URL(从浏览器中基本URI处指定的URL,形如/image/logo.gif)
绝对URI的格式
http:// user:pass @ www.example.jp :80 /dir/index.html ? uid=1 # ch1
协议方案名+登录信息(认证)+服务器地址+服务器端口号+带层次的文件路径+查询字符串+片段标识符
使用http:或https:等协议方案名获取访问资源时要制定协议类型.不区分字母大小写,最后附一个冒号(:)
也可使用data:或javascript:这类指定数据或脚本程序的方案名
登录信息(认证)指定用户名和密码作为从服务器端获取资源时必要的登录信息(身份认证).可选项
服务器地址:使用绝对URI必须指定待访问的服务器地址.地址可以是类似hackr.jp这种DNS可解析的名称,
或是192.168.1.1这类IPv4地址名,还可以是[0:0:0:0:0:0:0:1]这样用方括号括起来的IPv6地址名
服务器端口号:指定服务器连接的网络端口号.此项也是可选项,若用户省略则自动使用默认端口号
带层次的文件路径:指定服务器上的文件路径来定位特指的资源,这与UNIX系统的文件目录结构相似
查询字符串:针对已指定的文件路径内的资源,可以使用查询字符串传入任意参数.此项可选
片段标识符:使用片段标识符通常可标记出以获取资源中的子资源(文档内的某个位置).
但是RFC中没有明确规定其适用方法.该项也为可选项
并不是所有的应用程序都符合RFC
用来指定HTTP协议技术标准的文档,RFC(Request for Comments,征求修正意见书)

